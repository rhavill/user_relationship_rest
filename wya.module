<?php
/**
 * @file
 * Link general user relationship functionalities to services module.
 *
 * @author Drupal 6 port by Darren Ferguson <http://drupal.org/user/70179>
 * @author Written by scottgifford http://drupal.org/user/245699 
 */

/**
 * Implements hook_help().
 */
function wya_help($path, $arg) {
  switch ($path) {
    case 'admin/help#services_user':
      return '<p>'. t('Provides user relationship methods to services applications. Requires services.module.') .'</p>';
    case 'admin/modules#description':
      return t('Provides user relationship methods to services applications. Requires services.module.');
  }
}

/**
 * Implementation of hook_services_resources().
 */
function wya_services_resources() {
  return array(
    'location' => array(
      'retrieve' => array(
        'file' => array('type' => 'inc', 'module' => 'wya'),
        'callback' => 'wya_retrieve_location',
        'args' => array(
          array(
            'name' => 'uid',
            'optional' => FALSE,
            'source' => array('path' => 0),
            'type' => 'int',
            'description' => 'The uid of the user location to get',
          ),
        ),
        'access callback' => 'user_access',
        'access arguments' => array('can have Friend relationships'),
        'access arguments append' => FALSE,
      ),
      'create' => array(
        'help' => 'Submit phone location..',
        'file' => array('file' => 'inc', 'module' => 'wya'),
        'callback' => 'wya_save_location',
        'access callback' => 'user_access',
        'access arguments' => array('can have Friend relationships'),
        'access arguments append' => FALSE,
        'args' => array(
          array(
            'name' => 'location',
            'type' => 'struct',
            'description' => 'Location object.',
            'source' => 'data',
            'optional' => FALSE,
            'default value' => 0,
          ),
        ),
      ),
    ),
    'user-relationships' => array(
      'index' => array(
        'help' => 'Retrieves a listing of user relationships for the logged-in user.',
        'file' => array('file' => 'inc', 'module' => 'wya'),
        'callback' => 'wya_mine',
        'access callback' => 'user_access',
        'access arguments' => array('can have Friend relationships'),
        'access arguments append' => FALSE,
        'args' => array(
        ),
      ),
      'delete' => array(
        'help' => 'Delete an existing or pending relationship.',
        'file' => array('file' => 'inc', 'module' => 'wya'),
        'callback' => 'wya_delete',
        'access callback' => 'user_access',
        'access arguments' => array('delete Friend relationships'),
        'access arguments append' => FALSE,
        'args' => array(
          array(
            'name' => 'rid',
            'type' => 'int',
            'description' => 'Relationship ID to delete',
            'source' => array(
              'path' => '0',
            ),
            'optional' => FALSE,
            'default value' => 0,
          ),
        ),
      ),
      'create' => array(
        'help' => 'Request a user relationship.',
        'file' => array('file' => 'inc', 'module' => 'wya'),
        'callback' => 'wya_request',
        'access callback' => 'user_access',
        'access arguments' => array('can request Friend relationships'),
        'access arguments append' => FALSE,
        'args' => array(
          array(
            'name' => 'uid',
            'type' => 'int',
            'description' => 'ID of user from whom to request relationship.',
            'source' => 'data',
            'optional' => FALSE,
          ),
        ),
      ),
      'update' => array(
        'help' => 'Approve a user relationship.',
        'file' => array('file' => 'inc', 'module' => 'wya'),
        'callback' => 'wya_approve',
        'access callback' => 'user_access',
        'access arguments' => array('maintain Friend relationships'),
        'access arguments append' => FALSE,
        'args' => array(
          array(
            'name' => 'rid',
            'type' => 'int',
            'description' => 'Relationship ID to accept.',
            'source' => array(
              'path' => '0',
            ),
            'optional' => FALSE,
            'default value' => 0,
          ),
        ),
      ),
      'actions' => array(
        'request-by-name-email' => array(
          'help' => 'Request friend by providing user name or email address.',
          'file' => array('file' => 'inc', 'module' => 'wya'),
          'access callback' => 'user_access',
          'access arguments' => array('can request Friend relationships'),
          'callback' => 'wya_request_by_name_email',
          'args' => array(
            array(
              'name' => 'params',
              'type' => 'string',
              'description' => '',
              'source' => 'data',
              'optional' => FALSE,
              'default value' => '',
            ),              
          ),
        ),
        'password' => array(
          'help' => 'Request a new password.',
          'file' => array('file' => 'inc', 'module' => 'wya'),
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'callback' => 'wya_request_password',
          'args' => array(
            array(
              'name' => 'name',
              'type' => 'string',
              'description' => '',
              'source' => 'data',
              'optional' => FALSE,
              'default value' => '',
            ),              
          ),
        ),
        'is-logged-in' => array(
          'help' => 'Determines whether user is logged in.',
          'file' => array('file' => 'inc', 'module' => 'wya'),
          'access callback' => 'user_access',
          'access arguments' => array('access content'),
          'callback' => 'wya_is_logged_in',
          'args' => array(
          ),
        ),
      ),
    ),
    'user-relationships-types' => array(
      'index' => array(
        'help' => 'Retrieves a listing of user relationship types.',
        'file' => array('file' => 'inc', 'module' => 'wya'),
        'callback' => 'wya_types',
        'access callback' => 'user_access',
        'access arguments' => array('can have Friend relationships'),
        'access arguments append' => FALSE,
        'args' => array(
        ),
      ),
    ),
  );
}
